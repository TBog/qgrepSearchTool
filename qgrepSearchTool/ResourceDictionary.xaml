<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:av="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="av">
    <SolidColorBrush x:Key="BackgroundColor" Color="White" />
    <SolidColorBrush x:Key="ForegroundColor" Color="Black" />
    <SolidColorBrush x:Key="ResultFileColor" Color="White"/>
    <SolidColorBrush x:Key="ResultTextColor" Color="White" />
    <SolidColorBrush x:Key="ResultHighlightColor" Color="White" />
    <SolidColorBrush x:Key="ResultHoverColor" Color="White" />
    <SolidColorBrush x:Key="ResultSelectedColor" Color="White" />
    <SolidColorBrush x:Key="ButtonColor" Color="Gray" />
    <SolidColorBrush x:Key="ButtonHoverColor" Color="Black" />
    <SolidColorBrush x:Key="BorderColor" Color="Gray" />
    <SolidColorBrush x:Key="BorderHoverColor" Color="White" />
    <SolidColorBrush x:Key="BorderSelectionColor" />
    <SolidColorBrush x:Key="InputHintColor" Color="Gray"/>
    <SolidColorBrush x:Key="OverlayBusyColor" Color="#7C000000" />
    <SolidColorBrush x:Key="TextButtonDisabledBackgroundColor" Color="#38618d" />
    <SolidColorBrush x:Key="TextButtonDisabledForegroundColor" Color="#b4c4d4" />
    <SolidColorBrush x:Key="TextButtonBackgroundColor" Color="#1e81b0" />
    <SolidColorBrush x:Key="TextButtonHoverColor" Color="#063970" />
    <SolidColorBrush x:Key="TextButtonPressedColor" Color="#02172d" />
    <SolidColorBrush x:Key="ComboBoxColor" Color="#1e81b0" />
    <SolidColorBrush x:Key="ComboBoxHoverColor" Color="#063970" />
    <SolidColorBrush x:Key="ComboBoxTextColor" Color="White" />
    <SolidColorBrush x:Key="InputCheckboxColor" Color="#575d7a" />
    <SolidColorBrush x:Key="InputCheckboxHoverColor" Color="#abaebd" />
    <SolidColorBrush x:Key="InputCheckboxCheckedColor" Color="White" />
    <SolidColorBrush x:Key="InputCheckboxCheckedHoverColor" Color="#dddfe4" />
    <SolidColorBrush x:Key="CheckboxColor" Color="#1e81b0" />
    <SolidColorBrush x:Key="CheckboxMarkColor" Color="White" />
    <SolidColorBrush x:Key="CheckboxTextColor" Color="White" />
    <Style x:Key="SomeButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource ButtonHoverColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SomeTextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border" BorderBrush="{DynamicResource BorderColor}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderSelectionColor}"/>
                            <Setter Property="Panel.ZIndex" TargetName="border" Value="3"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderHoverColor}"/>
                            <Setter Property="Panel.ZIndex" TargetName="border" Value="3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BorderHoverColor}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource BorderSelectionColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{DynamicResource TextButtonBackgroundColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" Background="{TemplateBinding Background}" x:Name="Border" CornerRadius="1" BorderThickness="0" Padding="5,0">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextButtonHoverColor}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource TextButtonPressedColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="{DynamicResource TextButtonDisabledBackgroundColor}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextButtonDisabledForegroundColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource ComboBoxColor}" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxTextColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="20" />
                        </Grid.ColumnDefinitions>
                        <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="0" BorderThickness="0" Background="{TemplateBinding Background}"/>
                        <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Fill="{TemplateBinding Foreground}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ComboBoxHoverColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxTextColor}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton x:Name="ToggleButton" Style="{DynamicResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false" ClickMode="Press" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"/>
                        <ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}" />
                        <Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Slide">
                            <Grid x:Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border x:Name="DropDownBorder" BorderThickness="0"/>
                                <ScrollViewer Margin="0" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource ComboBoxTextColor}"/>
        <Setter Property="Background" Value="{DynamicResource ComboBoxColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border x:Name="Border" Padding="2" SnapsToDevicePixels="true" Background="{TemplateBinding Background}">
                        <ContentPresenter />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource ComboBoxHoverColor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="SomeCheckbox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource InputCheckboxColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource InputCheckboxCheckedHoverColor}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsChecked" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource InputCheckboxHoverColor}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsChecked" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="{DynamicResource InputCheckboxCheckedColor}" />
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Foreground" Value="{DynamicResource CheckboxTextColor}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="0" Background="{DynamicResource CheckboxColor}">
                                <Grid>
                                    <Path Visibility="Collapsed" Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False" StrokeThickness="2" Stroke="{DynamicResource CheckboxMarkColor}" Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                                    <Path Visibility="Collapsed" Width="7" Height="7" x:Name="InderminateMark" SnapsToDevicePixels="False" StrokeThickness="2" Stroke="{DynamicResource CheckboxMarkColor}" Data="M 0 7 L 7 0" />
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>